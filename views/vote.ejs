<div class="ui grid">
  <div class="six wide column">
    <form class="ui large form">
      <div class="ui segment">
        <div class="field">
          <label for="">Your choice</label>
          <div class="ui left input">
            <select class="ui dropdown">
              <option value="" disabled selected>Choose</option>
            </select>
          </div>
        </div>
        <div class="ui disabled fluid large primary button submit-vote">
          Vote
        </div>
      </div>
    </form>

    <div
      class="ui column share"
      style="margin-top: 30px; margin-left: 105px;"
    ></div>
    <div class="ui column delete-container" style="margin-top: 30px;"></div>
  </div>

  <div
    class="ten wide column"
    id="chartContainer"
    style="height: 370px; width: 100%;"
  ></div>

  <div class="ui basic modal delete-modal">
    <div class="ui icon header">
      <i class="archive icon"></i>
      Archive The Vote
    </div>
    <div class="content">
      <p style="text-align: center;">
        Do you really want to delete this vote?
      </p>
    </div>
    <div class="" style="text-align: right;">
      <div class="ui red basic cancel inverted button">
        <i class="remove icon"></i>
        No
      </div>
      <div class="ui green ok inverted button delete-confirm">
        <i class="checkmark icon"></i>
        Yes
      </div>
    </div>
  </div>
</div>

<script>
  const currentLocation = $(location)[0].pathname;
  let idToDelete = undefined;

  const renderChart = (data) => {
    const dataPoints = [];
    for (const vote of data.Choices) {
      if (vote.votes) dataPoints.push({ y: vote.votes, label: vote.name });
    }

    var chart = new CanvasJS.Chart("chartContainer", {
      theme: "light2", // "light1", "light2", "dark1", "dark2"
      exportEnabled: true,
      animationEnabled: true,
      title: {
        text: data.name,
      },

      data: [
        {
          type: "pie",
          startAngle: 25,
          toolTipContent: "<b>{label}</b>: {y}",
          indexLabel: dataPoints.length > 0 ? "{label} - {y}" : "",
          showInLegend: "true",
          legendText: "{label}",
          indexLabelFontSize: 16,
          dataPoints:
            dataPoints.length > 0 ? dataPoints : [{ y: 1, label: "no vote" }],
        },
      ],
    });
    chart.render();
  };

  const addOptions = (choices) => {
    let options = "";
    for (const choice of choices) {
      options += `<option value=${choice.id}>${choice.name}</option>`;
    }
    $(".dropdown").append(options);

    const shareLinks = `
    <a
        class="ui facebook button"
        href="https://www.facebook.com/sharer/sharer.php?u=${
          $(location)[0].href
        }"
        target="_blank"
        style="background-color: #4267b2; color: white;"
      >
        <i class="facebook icon"></i>
        Share on facebook
      </a>
      <a
        class="ui twitter button"
        href="https://twitter.com/intent/tweet?text=${$(location)[0].href}"
        target="_blank"
        style="background-color: #00acee; color: white;"
      >
        <i class="twitter icon"></i>
        Share on twitter
      </a>`;

    $(".share").append(shareLinks);
  };
  $.ajax({
    url: `/rest/vote/${currentLocation.replace("/vote/", "")}`,
    headers: { Authorization: token },
  })
    .then((response) => {
      if (response.isOwner) {
        $(".delete-container").append(`
      <div class="ui fluid large red button delete" id=${response.vote.id}>
        Delete
      </div>`);
        $(".delete").click((e) => {
          idToDelete = e.target.id;
          $(".ui.basic.modal").modal("show");
        });

        $(".delete-confirm").click((e) => {
          e.preventDefault();
          deleteVote();
        });

        $(".cancel").click(() => {
          $("body").removeClass("dimmed");
          $(".ui.dimmer.modals, .ui.basic.modal").removeClass("visible active");
          $(".ui.dimmer.modals").removeAttr("style");
          $(".ui.basic.modal").removeAttr("style");
          $(".ui.dimmer.modals, .ui.basic.modal").addClass("hidden");
        });
      }
      renderChart(response.vote);
      addOptions(response.vote.Choices);
    })
    .catch((err) => {
      $(location).attr("href", "/");
    });

  let selectedValue = undefined;

  $(".dropdown").change((e) => {
    $(".submit-vote").removeClass("disabled");
    selectedValue = e.target.value;
  });

  $(".submit-vote").click(() => {
    $(".submit-vote").addClass("loading");
    $.ajax({
      method: "POST",
      url: "/rest/vote/submit",
      headers: { Authorization: token },
      data: { id: selectedValue },
    })
      .then((response) => {
        $(location).attr("href", currentLocation);
      })
      .catch((err) => {
        $(".submit-vote").removeClass("loading");
      });
  });

  const deleteVote = () => {
    $(".cancel, .ok").addClass("loading disabled");
    $.ajax({
      method: "DELETE",
      url: "/rest/vote",
      headers: { Authorization: token },
      data: { id: idToDelete },
    })
      .then((response) => {
        $(".cancel, .ok").removeClass("loading disabled");
        $(location).attr("href", "/auth/profile");
      })
      .catch((err) => {
        $(location).attr("href", "/auth/profile");
      });
  };
</script>
